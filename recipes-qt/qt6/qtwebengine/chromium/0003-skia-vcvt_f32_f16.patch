Fix build with clang

Use neon inntrinsics

Fixes

| ../../../../../git/src/3rdparty/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h:1030:19: error: functional-style cast from 'F' (aka 'V<float>') to '__fp16' is not allowed
|     __fp16 fp16 = __fp16(f);
|                   ^~~~~~~~


Upstream Skia has fixed it differently see [1]

Upstream-Status: Submitted [https://codereview.qt-project.org/c/qt/qtwebengine-chromium/+/487065]

[1] https://github.com/google/skia/blob/main/src/opts/SkRasterPipeline_opts.h#L1090
Signed-off-by: Khem Raj <raj.khem@gmail.com>
--- a/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h
+++ b/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h
@@ -998,7 +998,7 @@ SI F approx_powf(F x, F y) {
 SI F from_half(U16 h) {
 #if defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) \
     && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-#if defined(SK_BUILD_FOR_MAC)
+#if defined(__ARM_FP16_FORMAT_IEEE)
     return vcvt_f32_f16(h);
 #else
     __fp16 fp16;
@@ -1024,7 +1024,7 @@ SI F from_half(U16 h) {
 SI U16 to_half(F f) {
 #if defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) \
     && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-#if defined(SK_BUILD_FOR_MAC)
+#if defined(__ARM_FP16_FORMAT_IEEE)
     return vcvt_f16_f32(f);
 #else
     __fp16 fp16 = __fp16(f);
